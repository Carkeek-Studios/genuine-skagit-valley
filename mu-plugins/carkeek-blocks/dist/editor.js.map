{"version":3,"file":"editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/classnames/index.js","webpack:///./src/blocks/accordion/edit.js","webpack:///./src/blocks/accordion/icons.js","webpack:///./src/blocks/accordion/index.js","webpack:///./src/blocks/accordion/parent.js","webpack:///./src/blocks/accordion/style.editor.scss","webpack:///./src/blocks/custom-archive/edit.js","webpack:///./src/blocks/custom-archive/index.js","webpack:///./src/blocks/custom-archive/styles.editor.scss","webpack:///./src/blocks/link-gallery/index.js","webpack:///./src/blocks/link-gallery/style.editor.scss","webpack:///./src/blocks/link-tile/edit.js","webpack:///./src/blocks/link-tile/index.js","webpack:///./src/blocks/link-tile/parent.js","webpack:///./src/blocks/link-tile/style.editor.scss","webpack:///./src/blocks/slider/index.js","webpack:///./src/blocks/slider/style.editor.scss","webpack:///./src/blocks/team-member/edit.js","webpack:///./src/blocks/team-member/index.js","webpack:///./src/blocks/team-member/parent.js","webpack:///./src/blocks/team-member/style.editor.scss","webpack:///./src/editor.js","webpack:///external [\"wp\",\"blob\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"compose\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"editor\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external \"lodash\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/editor.js\");\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { Component } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport {\n    RichText,\n    InnerBlocks\n} from \"@wordpress/block-editor\";\nimport { TextControl } from \"@wordpress/components\";\n\n\n\nclass CollapseSectionEdit extends Component {\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    componentDidMount() {\n        this.props.setAttributes({ inheritedHeaderStyle : this.props.headerStyle });\n    }\n    render() {\n        const { headerStyle, attributes, isSelected } = this.props;\n        const { title } = attributes;\n        const showControls = (isSelected || !title) ? true : false;\n        return(\n            <>\n                {showControls ? (\n                    <>\n                        <TextControl\n                            onChange={this.onChangeTitle}\n                            value={title}\n                            placeholder={__(\n                                \"Title\",\n                                \"carkeek-blocks\"\n                            )}\n                        />\n                        <InnerBlocks />\n                    </>\n                ) : (\n                    <h4 className={`wp-block-carkeek-blocks-expand-section__header ${headerStyle}`}>{title}</h4>\n                )}\n\n\n            </>\n        )\n    }\n}\nexport default withSelect((select, props) => {\n    const parentId = select( 'core/block-editor' ).getBlockHierarchyRootClientId( props.clientId );\n    const parentAttributes = select('core/block-editor').getBlockAttributes( parentId );\n    return {\n        headerStyle: parentAttributes.headerStyle\n    };\n})(CollapseSectionEdit);","const icons =  {};\n\nicons.accordion = <svg width='20px' height='20px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M87 9H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V13a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V13a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14zM87 37H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V41a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V41a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14zM87 65H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V69a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V69a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14z\"></path>\n</svg>;\n\nicons.dropdown = <svg width='20px' height='20px' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'>\n    <path d=\"M87 37H13a4 4 0 00-4 4v18a4 4 0 004 4h74a4 4 0 004-4V41a4 4 0 00-4-4zm2 22a2 2 0 01-2 2H13a2 2 0 01-2-2V41a2 2 0 012-2h74a2 2 0 012 2zm-37-9a1 1 0 01-1 1H18a1 1 0 010-2h33a1 1 0 011 1zm30.33-4.07a1 1 0 01.14 1.41l-5 6.12a1 1 0 01-.77.37 1 1 0 01-.78-.37l-5-6.12a1 1 0 011.55-1.27l4.23 5.18 4.22-5.18a1 1 0 011.41-.14z\"></path>\n</svg>;\n\nexport default icons;","import \"./style.editor.scss\";\nimport \"./parent\";\nimport icons from './icons';\nimport edit from \"./edit\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\n\nconst attributes = {\n    title: {\n        type: \"string\"\n    },\n    inheritedHeaderStyle: {\n        type: \"string\"\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/expand-collapse-section\", {\n    title: __(\"Expand Collapse Section\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Build an Accordion with inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.dropdown,\n    },\n\n    category: \"widgets\",\n\n    attributes,\n\n    parent: [\"carkeek-blocks/expand-collapse\"],\n\n    keywords: [\n        __(\"accordion\", \"carkeek-blocks\"),\n        __(\"expand\", \"carkeek-blocks\"),\n        __(\"collapse\", \"carkeek-blocks\")\n    ],\n\n    edit,\n\n    save({ attributes } ) {\n        const{ title, inheritedHeaderStyle } = attributes;\n        return (\n            <div>\n                <div className={`wp-block-carkeek-blocks-expand-section__header ${inheritedHeaderStyle}`}>{title}</div>\n                <div className=\"wp-block-carkeek-blocks-expand-section__content\" aria-expanded=\"false\">\n                    <InnerBlocks.Content />\n                </div>\n            </div>\n        );\n    }\n});","import \"./style.editor.scss\";\nimport icons from './icons';\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RadioControl, CheckboxControl } from \"@wordpress/components\";\n\nconst attributes = {\n    headerStyle: {\n        type: 'string',\n        default: 'h3'\n    },\n    accordionStyle: {\n        type: 'boolean',\n        default: false\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/expand-collapse\", {\n    title: __(\"Expand/Colllapse\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Make an accordion of inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: {\n        src: icons.accordion,\n    },\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n    attributes,\n\n    keywords: [\n        __(\"accordion\", \"carkeek-blocks\"),\n        __(\"expand\", \"carkeek-blocks\"),\n        __(\"collapse\", \"carkeek-blocks\")\n    ],\n\n    edit({ attributes, className, setAttributes }) {\n        const { headerStyle, accordionStyle } = attributes;\n\n        return (\n            <div className={`${className}`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <CheckboxControl\n                            className=\"carkeek-accordion-style-label\"\n                            label=\"Use Accordion Style\"\n                            checked={ accordionStyle }\n                            onChange={value =>\n                                setAttributes({ accordionStyle: value })\n                            }\n                            help={\n                                accordionStyle\n                                    ? __(\n                                        \"Only one section will be expanded at a time\",\n                                        \"carkeek-blocks\"\n                                    )\n                                    : __(\n                                        \"Multiple sections can be open at a time\",\n                                        \"carkeek-blocks\"\n                                    )\n                            }\n                        />\n                        <RadioControl\n                            label=\"Section Header Style\"\n                            selected = {headerStyle}\n                            options = { [\n                                { label: 'h2', value: 'h2' },\n                                { label: 'h3', value: 'h3' },\n                                { label: 'h4', value: 'h4' },\n                                { label: 'h5', value: 'h5' },\n                                { label: 'h6', value: 'h6' },\n                            ]}\n                            onChange={value =>\n                                setAttributes({ headerStyle: value })\n                            }\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/expand-collapse-section\"]}\n\n                />\n            </div>\n        );\n    },\n\n    save({ attributes } ) {\n        const{ accordionStyle } = attributes;\n        return (\n            <div data-accordion={accordionStyle}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});","// extracted by mini-css-extract-plugin","import classnames from \"classnames\";\nimport { get, invoke } from \"lodash\";\n\nimport { Component, RawHTML } from \"@wordpress/element\";\nimport { withSelect } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport {\n    RangeControl,\n    PanelBody,\n    ToggleControl,\n    RadioControl,\n    Spinner,\n    Placeholder,\n    ToolbarGroup,\n    SelectControl\n} from \"@wordpress/components\";\nimport { InspectorControls, BlockControls } from \"@wordpress/block-editor\";\n\nclass CustomArchiveEdit extends Component {\n    onChangeNumberOfPosts = numberOfPosts => {\n        this.props.setAttributes({ numberOfPosts });\n    };\n\n    onChangePostType = postTypeSelected => {\n        this.props.setAttributes({ postTypeSelected });\n    };\n\n    render() {\n        const {\n            posts,\n            postTypes,\n            className,\n            attributes,\n            setAttributes\n        } = this.props;\n        const {\n            numberOfPosts,\n            displayPostContent,\n            displayPostTitle,\n            displayPostContentRadio,\n            excerptLength,\n            displayFeaturedImage,\n            postLayout,\n            postsToShow,\n            postTypeSelected\n        } = attributes;\n        const icons = {\n            pin: (\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"black\"\n                    width=\"18px\"\n                    height=\"18px\"\n                >\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                    <path d=\"M22 13h-8v-2h8v2zm0-6h-8v2h8V7zm-8 10h8v-2h-8v2zm-2-8v6c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V9c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2zm-1.5 6l-2.25-3-1.75 2.26-1.25-1.51L3.5 15h7z\" />\n                </svg>\n            ),\n            list: (\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"black\"\n                    width=\"18px\"\n                    height=\"18px\"\n                >\n                    <g fill=\"none\">\n                        <path d=\"M0 0h24v24H0V0z\" />\n                        <path d=\"M0 0h24v24H0V0z\" opacity=\".87\" />\n                    </g>\n                    <path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7zm-4 6h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\" />\n                </svg>\n            ),\n            grid: (\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"black\"\n                    width=\"18px\"\n                    height=\"18px\"\n                >\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n                    <path d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\" />\n                </svg>\n            )\n        };\n        const postTypeSelect = (\n            <SelectControl\n                label={__(\"Post Type\", \"carkeek-blocks\")}\n                onChange={this.onChangePostType}\n                options={\n                    postTypes &&\n                    postTypes.map(type => ({\n                        value: type.slug,\n                        label: type.name\n                    }))\n                }\n                value={postTypeSelected}\n            />\n        );\n        const inspectorControls = (\n            <InspectorControls>\n                <PanelBody title={__(\"Posts Settings\", \"carkeek-blocks\")}>\n                    {postTypeSelect}\n                    <RangeControl\n                        label={__(\"Number of Posts\", \"carkeek-blocks\")}\n                        value={numberOfPosts}\n                        onChange={this.onChangeNumberOfPosts}\n                        min={1}\n                        max={10}\n                    />\n                    <ToggleControl\n                        label={__(\"Show Post Title\")}\n                        checked={displayPostTitle}\n                        onChange={value =>\n                            setAttributes({ displayPostTitle: value })\n                        }\n                    />\n                    <ToggleControl\n                        label={__(\"Post content\")}\n                        checked={displayPostContent}\n                        onChange={value =>\n                            setAttributes({ displayPostContent: value })\n                        }\n                    />\n\n                    {displayPostContent && (\n                        <RadioControl\n                            label={__(\"Show:\")}\n                            selected={displayPostContentRadio}\n                            options={[\n                                { label: __(\"Excerpt\"), value: \"excerpt\" },\n                                {\n                                    label: __(\"Full post\"),\n                                    value: \"full_post\"\n                                }\n                            ]}\n                            onChange={value =>\n                                setAttributes({\n                                    displayPostContentRadio: value\n                                })\n                            }\n                        />\n                    )}\n                    {displayPostContent &&\n                        displayPostContentRadio === \"excerpt\" && (\n                            <RangeControl\n                                label={__(\"Max number of words in excerpt\")}\n                                value={excerptLength}\n                                onChange={value =>\n                                    setAttributes({ excerptLength: value })\n                                }\n                                min={10}\n                                max={30}\n                            />\n                        )}\n\n                    <ToggleControl\n                        label={__(\"Display featured image\")}\n                        checked={displayFeaturedImage}\n                        onChange={value =>\n                            setAttributes({ displayFeaturedImage: value })\n                        }\n                    />\n                </PanelBody>\n            </InspectorControls>\n        );\n\n        const hasPosts = Array.isArray(posts) && posts.length;\n\n        if (!hasPosts) {\n            const noPostMessage =\n                typeof postTypeSelected !== \"undefined\"\n                    ? __(\"No Posts Found\")\n                    : __(\"Select a Post Type from the Block Settings\");\n            return (\n                <>\n                    {inspectorControls}\n\n                    <Placeholder icon={icons.pin} label={__(\"Latest Posts\")}>\n                        {!Array.isArray(posts) ? <Spinner /> : noPostMessage}\n                    </Placeholder>\n                </>\n            );\n        }\n\n        //removing posts should be instant\n        const displayPosts =\n            posts.length > postsToShow ? posts.slice(0, postsToShow) : posts;\n\n        const layoutControls = [\n            {\n                icon: icons.list,\n                title: __(\"List view\"),\n                onClick: () => setAttributes({ postLayout: \"list\" }),\n                isActive: postLayout === \"list\"\n            },\n            {\n                icon: icons.grid,\n                title: __(\"Grid view\"),\n                onClick: () => setAttributes({ postLayout: \"grid\" }),\n                isActive: postLayout === \"grid\"\n            }\n        ];\n        return (\n            <>\n                {inspectorControls}\n                <BlockControls>\n                    <ToolbarGroup controls={layoutControls} />\n                </BlockControls>\n                <div\n                    className={classnames(className, {\n                        \"wp-block-ck-custom_posttype__list\": true,\n                        \"is-grid\": postLayout === \"grid\",\n                        \"is-list\": postLayout === \"list\"\n                    })}\n                >\n                    <ul>\n                        {displayPosts.map(post => {\n                            const titleTrimmed = invoke(post, [\n                                \"title\",\n                                \"rendered\",\n                                \"trim\"\n                            ]);\n                            let excerpt = post.excerpt.rendered;\n\n                            const excerptElement = document.createElement(\n                                \"div\"\n                            );\n                            excerptElement.innerHTML = excerpt;\n\n                            excerpt =\n                                excerptElement.textContent ||\n                                excerptElement.innerText ||\n                                \"\";\n                            const imageSourceUrl = post.featuredImageSourceUrl;\n\n                            const imageClasses = classnames({\n                                \"wp-block-ck-custom_posttype__featured-image\": true\n                            });\n\n                            const postExcerpt = (\n                                <>\n                                    {excerpt\n                                        .trim()\n                                        .split(\" \", excerptLength)\n                                        .join(\" \")}\n                                    {/* translators: excerpt truncation character, default …  */}\n                                    <a\n                                        href={post.link}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {__(\"Read more\")}\n                                    </a>\n                                </>\n                            );\n\n                            return (\n                                <li key={post.id}>\n                                    {displayFeaturedImage && (\n                                        <div className={imageClasses}>\n                                            {imageSourceUrl && (\n                                                <img\n                                                    src={imageSourceUrl}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        </div>\n                                    )}\n                                    {displayPostTitle && (\n                                        <a\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            href={post.link}\n                                        >\n                                            {titleTrimmed ? (\n                                                <RawHTML>\n                                                    {titleTrimmed}\n                                                </RawHTML>\n                                            ) : (\n                                                __(\"(no title)\")\n                                            )}\n                                        </a>\n                                    )}\n                                    {displayPostContent &&\n                                        displayPostContentRadio ===\n                                            \"excerpt\" && (\n                                            <div className=\"wp-block-ck-custom_posttype__post-excerpt\">\n                                                {postExcerpt}\n                                            </div>\n                                        )}\n                                    {displayPostContent &&\n                                        displayPostContentRadio ===\n                                            \"full_post\" && (\n                                            <div className=\"wp-block-ck-custom_posttype__post-full-content\">\n                                                <RawHTML key=\"html\">\n                                                    {post.content.raw.trim()}\n                                                </RawHTML>\n                                            </div>\n                                        )}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withSelect((select, props) => {\n    const { attributes } = props;\n    const { numberOfPosts, postTypeSelected } = attributes;\n    const { getEntityRecords, getMedia, getPostTypes } = select(\"core\");\n    let query = { per_page: numberOfPosts };\n    const latestPosts = getEntityRecords(\"postType\", postTypeSelected, query);\n\n    return {\n        postTypes: getPostTypes(),\n        posts: !Array.isArray(latestPosts)\n            ? latestPosts\n            : latestPosts.map(post => {\n                  if (post.featured_media) {\n                      const image = getMedia(post.featured_media);\n                      let url = get(\n                          image,\n                          [\"media_details\", \"sizes\", \"large\", \"sourc_url\"],\n                          null\n                      );\n                      if (!url) {\n                          url = get(image, \"source_url\", null);\n                      }\n                      return { ...post, featuredImageSourceUrl: url };\n                  }\n                  return post;\n              })\n    };\n})(CustomArchiveEdit);\n","import \"./styles.editor.scss\";\nimport edit from \"./edit\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\n\nconst attributes = {\n    numberOfPosts: {\n        type: \"number\",\n        default: 3\n    },\n    postTypeSelected: {\n        type: \"string\"\n    },\n    displayFeaturedImage: {\n        type: \"boolean\",\n        default: true\n    },\n    displayPostTitle: {\n        type: \"boolean\",\n        default: true\n    },\n    postLayout: {\n        type: \"string\",\n        default: \"grid\"\n    },\n    excerptLength: {\n        type: \"number\",\n        default: 25\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/custom-archive\", {\n    title: __(\"Custom Post Type Archive\", \"carkeek-blocks\"),\n    description: __(\n        \"BLock showing the latest custom post type items.\",\n        \"carkeek-blocks\"\n    ),\n    icon: \"book-alt\",\n    category: \"widgets\",\n    edit: edit,\n    attributes: attributes,\n    supports: {\n        align: [\"wide\", \"full\"]\n    },\n    save() {\n        return null;\n    }\n});\n","// extracted by mini-css-extract-plugin","import \"./style.editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody, RangeControl } from \"@wordpress/components\";\n\n\nconst attributes = {\n    columns: {\n        type: \"number\",\n        default: 3,\n    },\n};\n\nregisterBlockType(\"carkeek-blocks/link-gallery\", {\n    title: __(\"Link Gallery\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Block showing a collection of linked images\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"grid-view\",\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    keywords: [\n        __(\"tiles\", \"carkeek-blocks\"),\n        __(\"columns\", \"carkeek-blocks\"),\n        __(\"links\", \"carkeek-blocks\"),\n        __(\"logos\", \"carkeek-blocks\"),\n        __(\"gallery\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className, attributes, setAttributes }) {\n        const { columns } = attributes;\n        const updateColumns = ( value ) => {\n            setAttributes( {\n                columns: value,\n            });\n        }\n        return (\n            <div className={`${className} has-${columns}-columns`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <RangeControl\n                            label={__(\"Columns\", \"carkeek-blocks\")}\n                            value={columns}\n                            onChange={ updateColumns }\n                            min={1}\n                            max={6}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"core/image\"]}\n                    orientation=\"horizontal\"\n                />\n            </div>\n        );\n    },\n\n    save( { attributes } ) {\n        const { columns } = attributes;\n        return (\n            <div className={`has-${columns}-columns`}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});","// extracted by mini-css-extract-plugin","import { Component } from \"@wordpress/element\";\nimport {\n    MediaPlaceholder,\n    BlockControls,\n    MediaUpload,\n    MediaUploadCheck,\n    InspectorControls,\n    URLInput,\n    PanelColorSettings,\n    withColors\n} from \"@wordpress/block-editor\";\nimport { __ } from \"@wordpress/i18n\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport {\n    Spinner,\n    withNotices,\n    Toolbar,\n    IconButton,\n    PanelBody,\n    SelectControl,\n    TextControl,\n    FocalPointPicker\n} from \"@wordpress/components\";\nimport { withSelect } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport classnames from \"classnames\";\n\nclass LinkTileEdit extends Component {\n    state = {\n        selectedLink: null\n    };\n\n    componentDidMount() {\n        const { attributes, setAttributes } = this.props;\n        const { imgUrl, imgId } = attributes;\n        if (imgUrl && isBlobURL(imgUrl) && !imgId) {\n            setAttributes({\n                imgUrl: \"\",\n                alt: \"\"\n            });\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isSelected && !this.props.isSelected) {\n            this.setState({\n                selectedLink: null\n            });\n        }\n    }\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    onChangeLinkTitle = linkTitle => {\n        this.props.setAttributes({ linkTitle });\n    };\n\n    onChangeLink = linkUrl => {\n        this.props.setAttributes({ linkUrl });\n    };\n\n    onSelectImage = ({ id, url }) => {\n        this.props.setAttributes({\n            imgId: id,\n            imgUrl: url\n        });\n    };\n    onUploadError = message => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice(message);\n    };\n    removeImage = () => {\n        this.props.setAttributes({\n            imgId: null,\n            imgUrl: \"\"\n        });\n    };\n    onImageSizeChange = imgUrl => {\n        this.props.setAttributes({\n            imgUrl\n        });\n    };\n    getImageSizes() {\n        const { image, imageSizes } = this.props;\n        if (!image) return [];\n        let options = [];\n        const sizes = image.media_details.sizes;\n        for (const key in sizes) {\n            const size = sizes[key];\n            const imageSize = imageSizes.find(size => size.slug === key);\n            if (imageSize) {\n                options.push({\n                    label: imageSize.name,\n                    value: size.source_url\n                });\n            }\n        }\n        return options;\n    }\n\n    render() {\n        //console.log(this.props);\n        const {\n            className,\n            attributes,\n            noticeUI,\n            isSelected,\n            backgroundColor,\n            setAttributes,\n            setBackgroundColor\n        } = this.props;\n        const {\n            title,\n            imgUrl,\n            linkUrl,\n            linkTitle,\n            imgId,\n            focalPoint\n        } = attributes;\n\n        const imageStyle = {\n            backgroundImage: `url( ${imgUrl} )`\n        };\n        if (focalPoint) {\n            imageStyle.backgroundPosition = `${focalPoint.x *\n                100}% ${focalPoint.y * 100}%`;\n        }\n        const bgColorClass = classnames({\n            \"has-background-color\": backgroundColor.color,\n            \"wp-block-carkeek-blocks-link-tile__bg\": true\n        });\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__(\"Image Settings\", \"carkeek-blocks\")}>\n                        {imgId && (\n                            <SelectControl\n                                label={__(\"Image Size\", \"carkeek-blocks\")}\n                                options={this.getImageSizes()}\n                                onChange={this.onImageSizeChange}\n                                value={imgUrl}\n                            />\n                        )}\n                        {imgId && (\n                            <FocalPointPicker\n                                label={__(\"Focal Point\", \"carkeek-blocks\")}\n                                url={imgUrl}\n                                onChange={newFocalPoint =>\n                                    setAttributes({\n                                        focalPoint: newFocalPoint\n                                    })\n                                }\n                                value={focalPoint}\n                            />\n                        )}\n                    </PanelBody>\n                    <PanelColorSettings\n                        title={__(\"Color Settings\", \"carkeek-blocks\")}\n                        colorSettings={[\n                            {\n                                value: backgroundColor.color,\n                                onChange: setBackgroundColor,\n                                label: __(\"Background Color\", \"carkeek-blocks\"),\n                                clearable: false\n                            }\n                        ]}\n                    ></PanelColorSettings>\n                </InspectorControls>\n                <BlockControls>\n                    {imgUrl && (\n                        <Toolbar>\n                            {imgId && (\n                                <MediaUploadCheck>\n                                    <MediaUpload\n                                        onSelect={this.onSelectImage}\n                                        allowedTypes={[\"image\"]}\n                                        value={imgId}\n                                        render={({ open }) => {\n                                            return (\n                                                <IconButton\n                                                    className=\"components-icon-button components-toolbar__control\"\n                                                    label={__(\n                                                        \"Edit Image\",\n                                                        \"carkeek-blocks\"\n                                                    )}\n                                                    onClick={open}\n                                                    icon=\"edit\"\n                                                />\n                                            );\n                                        }}\n                                    />\n                                </MediaUploadCheck>\n                            )}\n                            <IconButton\n                                className=\"components-icon-button components-toolbar__control\"\n                                label={__(\"Remove Image\", \"carkeek-blocks\")}\n                                onClick={this.removeImage}\n                                icon=\"trash\"\n                            />\n                        </Toolbar>\n                    )}\n                </BlockControls>\n                <div className={className}>\n                    {imgUrl ? (\n                        <>\n                            <div\n                                className={\n                                    \"wp-block-carkeek-blocks-link-tile__img\"\n                                }\n                                style={imageStyle}\n                            >\n                                {isBlobURL(imgUrl) && <Spinner />}\n                                {isSelected ? (\n                                    <TextControl\n                                        className={\n                                            \"wp-block-carkeek-blocks-link-tile__title\"\n                                        }\n                                        onChange={this.onChangeTitle}\n                                        value={title}\n                                        placeholder={__(\n                                            \"Title\",\n                                            \"carkeek-blocks\"\n                                        )}\n                                    />\n                                ) : (\n                                    <h4>{title}</h4>\n                                )}\n                            </div>\n                            {isSelected && (\n                                <div\n                                    className={bgColorClass}\n                                    style={{\n                                        backgroundColor: backgroundColor.color\n                                    }}\n                                >\n                                    <TextControl\n                                        className={\n                                            \"wp-block-carkeek-blocks-link-tile__title_hover\"\n                                        }\n                                        onChange={this.onChangeLinkTitle}\n                                        value={linkTitle}\n                                        label={__(\n                                            \"Hover State Title\",\n                                            \"carkeek-blocks\"\n                                        )}\n                                    />\n\n                                    <URLInput\n                                        value={linkUrl}\n                                        onChange={this.onChangeLink}\n                                        label={__(\"Links To\", \"carkeek-blocks\")}\n                                    />\n                                </div>\n                            )}\n                        </>\n                    ) : (\n                        <MediaPlaceholder\n                            icon=\"format-image\"\n                            onSelect={this.onSelectImage}\n                            onError={this.onUploadError}\n                            //accept=\"image/*\"\n                            allowedTypes={[\"image\"]}\n                            notices={noticeUI}\n                            labels={{\n                                title: \"Tile Image\",\n                                instructions:\n                                    \"Upload an image file or pick one from your media library.\"\n                            }}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default compose([\n    withSelect((select, props) => {\n        const imgId = props.attributes.imgId;\n        return {\n            image: imgId ? select(\"core\").getMedia(imgId) : null,\n            imageSizes: select(\"core/editor\").getEditorSettings().imageSizes\n        };\n    }),\n    withColors({ backgroundColor: \"background-color\" }),\n    withNotices\n])(LinkTileEdit);\n","import \"./style.editor.scss\";\nimport \"./parent\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from \"./edit\";\nimport { getColorClassName } from \"@wordpress/block-editor\";\nimport classnames from \"classnames\";\n\nconst attributes = {\n    title: {\n        type: \"string\"\n    },\n    imgId: {\n        type: \"number\"\n    },\n    imgUrl: {\n        type: \"string\"\n    },\n    linkTitle: {\n        type: \"string\"\n    },\n    linkUrl: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"a\",\n        attribute: \"href\"\n    },\n    backgroundColor: {\n        type: \"string\",\n        default: \"theme-green\"\n    },\n    textColor: {\n        type: \"string\"\n    },\n    focalPoint: {\n        type: \"object\"\n    }\n\n};\n\nregisterBlockType(\"carkeek-blocks/link-tile\", {\n    title: __(\"Link Tile\", \"carkeek-blocks\"),\n\n    description: __(\n        \" Block that displays a link with an image background and hover state. \",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"admin-links\",\n\n    parent: [\"carkeek-blocks/link-tiles\"],\n\n    supports: {\n        reusable: false,\n        html: false\n    },\n\n    category: \"widgets\",\n\n    keywords: [__(\"link\", \"carkeek-blocks\"), __(\"tile\", \"carkeek-blocks\")],\n\n    attributes,\n\n    save: ({ attributes, className }) => {\n        const {\n            title,\n            imgUrl,\n            linkTitle,\n            linkUrl,\n            backgroundColor,\n            focalPoint\n        } = attributes;\n        const imageStyle = {\n            backgroundImage: `url( ${imgUrl} )`\n        };\n        if (focalPoint) {\n            imageStyle.backgroundPosition = `${focalPoint.x *\n                100}% ${focalPoint.y * 100}%`;\n        }\n        const backgroundClass = getColorClassName(\n            \"background-color\",\n            backgroundColor\n        );\n        const classes = classnames(className, {\n            [backgroundClass]: backgroundClass,\n            \"wp-block-column\": true\n        });\n        return (\n            <div className={classes}>\n                {imgUrl && (\n                    <a\n                        className={\n                            \"wp-block-carkeek-blocks-link-tile__link wp-block-carkeek-blocks-link-tile__inner\"\n                        }\n                        href={linkUrl}\n                    >\n                        <div\n                            style={imageStyle}\n                            className={\n                                \"wp-block-carkeek-blocks-link-tile__img wp-block-carkeek-blocks-link-tile__inner\"\n                            }\n                        >\n                            <span className=\"link-tile__title\">{title}</span>\n                        </div>\n                        <span className=\"link-tile__hover_title\">\n                            {linkTitle ? linkTitle : title}\n                        </span>\n                    </a>\n                )}\n            </div>\n        );\n    },\n\n    edit\n});\n","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\n\nconst attributes = {\n    align: {\n        type: \"string\",\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/link-tiles\", {\n    title: __(\"Link Tiles\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Block showing a collection of linked tiles\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: \"grid-view\",\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    keywords: [\n        __(\"tiles\", \"carkeek-blocks\"),\n        __(\"columns\", \"carkeek-blocks\"),\n        __(\"links\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className }) {\n        return (\n            <div className={`${className} wp-block-columns`}>\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/link-tile\"]}\n                    template={[\n                        [\"carkeek-blocks/link-tile\"],\n                        [\"carkeek-blocks/link-tile\"]\n                    ]}\n                    orientation=\"horizontal\"\n                />\n            </div>\n        );\n    },\n\n    save() {\n        return (\n            <div className={\"wp-block-columns\"}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});\n","// extracted by mini-css-extract-plugin","import \"./style.editor.scss\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\";\nimport { Path, SVG, PanelBody, RangeControl, ToggleControl, RadioControl } from \"@wordpress/components\";\n\nconst attributes = {\n    autoPlay: {\n        type: 'boolean',\n        default: true\n    },\n    autoPlaySpeed: {\n        type: 'number',\n        default: 3000,\n    },\n    sliderType: {\n        type: 'string',\n        default: 'single'\n    },\n    slidesToShow: {\n        type: 'number',\n        default: 3\n    },\n    slidesToScroll: {\n        type: 'number',\n        default: 3\n    },\n    carousel: {\n        type: 'boolean',\n        default: false\n    }\n}\n\nregisterBlockType(\"carkeek-blocks/slider\", {\n    title: __(\"Block Slider\", \"carkeek-blocks\"),\n\n    description: __(\n        \"Make a slideshow of inner blocks\",\n        \"carkeek-blocks\"\n    ),\n\n    icon: (<SVG\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\">\n            <Path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <Path d=\"M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"/>\n        </SVG>),\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n    attributes,\n\n    keywords: [\n        __(\"slider\", \"carkeek-blocks\"),\n        __(\"slide\", \"carkeek-blocks\"),\n        __(\"gallery\", \"carkeek-blocks\")\n    ],\n\n    edit({ attributes, className, setAttributes }) {\n        const { autoPlay, autoPlaySpeed, sliderType, slidesToScroll, slidesToShow, carousel } = attributes;\n        return (\n            <div className={`${className}`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <ToggleControl\n                            label=\"Auto Play Slider\"\n                            checked={ autoPlay }\n                            onChange={value =>\n                                setAttributes({ autoPlay: value })\n                            }\n                        />\n                        {autoPlay &&\n                        <RangeControl\n                            label={__(\"Speed in ms\", \"carkeek-blocks\")}\n                            value={autoPlaySpeed}\n                            onChange={value =>\n                                setAttributes({ autoPlaySpeed: value })\n                            }\n                            min={1000}\n                            max={10000}\n                        />\n                        }\n                        {/* code is ready, but need to do more styling if carousel is desired - its set to false by default so option is not displayed */}\n                        {carousel &&\n                        <RadioControl\n                            label=\"Slider type\"\n                            selected={ sliderType }\n                            options={ [\n                                { label: 'Single Slides', value: 'single' },\n                                { label: 'Carousel', value: 'carousel' },\n                            ] }\n                            onChange={ ( sliderType ) => { setAttributes( { sliderType } ) } }\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Show\", \"carkeek-blocks\")}\n                            value={slidesToShow}\n                            onChange={ ( slidesToShow ) => { setAttributes( { slidesToShow } ) } }\n                            min={2}\n                            max={6}\n                        />\n                        }\n                        {sliderType == 'carousel' &&\n                            <RangeControl\n                            label={__(\"Slides to Scroll\", \"carkeek-blocks\")}\n                            value={slidesToScroll}\n                            onChange={ ( slidesToScroll ) => { setAttributes( { slidesToScroll } ) } }\n                            min={1}\n                            max={6}\n                        />\n                        }\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"core/group\", \"core/media-text\", \"core/cover\"]}\n                />\n            </div>\n        );\n    },\n\n    save({ attributes } ) {\n        const{ autoPlay, autoPlaySpeed, slidesToShow, sliderType, slidesToScroll } = attributes;\n        return (\n            <div>\n                <div className=\"wp-block-carkeek-blocks-slider__slide-wrapper\" data-autoplay={autoPlay} data-speed={autoPlaySpeed} data-type={sliderType} data-slides={slidesToShow} data-scroll={slidesToScroll}>\n                <InnerBlocks.Content />\n                </div>\n            </div>\n        );\n    }\n});","// extracted by mini-css-extract-plugin","import { Component } from \"@wordpress/element\";\nimport {\n    RichText,\n    MediaPlaceholder,\n    BlockControls,\n    MediaUpload,\n    MediaUploadCheck,\n    InspectorControls\n} from \"@wordpress/block-editor\";\nimport { __ } from \"@wordpress/i18n\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport {\n    Spinner,\n    withNotices,\n    Toolbar,\n    IconButton,\n    PanelBody,\n    TextareaControl,\n    SelectControl,\n    TextControl\n} from \"@wordpress/components\";\nimport { withSelect } from \"@wordpress/data\";\n\nclass TeamMemberEdit extends Component {\n    state = {\n        selectedLink: null\n    };\n\n    componentDidMount() {\n        const { attributes, setAttributes } = this.props;\n        const { url, id } = attributes;\n        if (url && isBlobURL(url) && !id) {\n            setAttributes({\n                url: \"\",\n                alt: \"\"\n            });\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isSelected && !this.props.isSelected) {\n            this.setState({\n                selectedLink: null\n            });\n        }\n    }\n    onChangeTitle = title => {\n        this.props.setAttributes({ title });\n    };\n    onChangeName = name => {\n        this.props.setAttributes({ name });\n    };\n    onChangeDetails = details => {\n        this.props.setAttributes({ details });\n    };\n    onChangeEmail = email => {\n        this.props.setAttributes({ email });\n    };\n    onChangeEmailLabel = emailLabel => {\n        this.props.setAttributes({ emailLabel });\n    };\n    onSelectImage = ({ id, url, alt }) => {\n        this.props.setAttributes({\n            id,\n            url,\n            alt\n        });\n    };\n    onSelectURL = url => {\n        this.props.setAttributes({\n            url,\n            id: null,\n            alt: \"\"\n        });\n    };\n    onUploadError = message => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice(message);\n    };\n    removeImage = () => {\n        this.props.setAttributes({\n            id: null,\n            url: \"\",\n            alt: \"\"\n        });\n    };\n    updateAlt = alt => {\n        this.props.setAttributes({\n            alt\n        });\n    };\n    onImageSizeChange = url => {\n        this.props.setAttributes({\n            url\n        });\n    };\n    getImageSizes() {\n        const { image, imageSizes } = this.props;\n        if (!image) return [];\n        let options = [];\n        const sizes = image.media_details.sizes;\n        for (const key in sizes) {\n            const size = sizes[key];\n            const imageSize = imageSizes.find(size => size.slug === key);\n            if (imageSize) {\n                options.push({\n                    label: imageSize.name,\n                    value: size.source_url\n                });\n            }\n        }\n        return options;\n    }\n\n\n    render() {\n        //console.log(this.props);\n        const { className, attributes, noticeUI, isSelected, layout } = this.props;\n        const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__(\"Image Settings\", \"carkeek-blocks\")}>\n                        {url && !isBlobURL(url) && (\n                            <TextareaControl\n                                label={__(\n                                    \"Alt Text (Alternative Text)\",\n                                    \"carkeek-blocks\"\n                                )}\n                                value={alt}\n                                onChange={this.updateAlt}\n                                help={__(\n                                    \"Alternative text describes your image to people can't see it. Add a short description with its key details.\"\n                                )}\n                            />\n                        )}\n                        {id && (\n                            <SelectControl\n                                label={__(\"Image Size\", \"carkeek-blocks\")}\n                                options={this.getImageSizes()}\n                                onChange={this.onImageSizeChange}\n                                value={url}\n                            />\n                        )}\n                    </PanelBody>\n                </InspectorControls>\n                <BlockControls>\n                    {url && (\n                        <Toolbar>\n                            {id && (\n                                <MediaUploadCheck>\n                                    <MediaUpload\n                                        onSelect={this.onSelectImage}\n                                        allowedTypes={[\"image\"]}\n                                        value={id}\n                                        render={({ open }) => {\n                                            return (\n                                                <IconButton\n                                                    className=\"components-icon-button components-toolbar__control\"\n                                                    label={__(\n                                                        \"Edit Image\",\n                                                        \"carkeek-blocks\"\n                                                    )}\n                                                    onClick={open}\n                                                    icon=\"edit\"\n                                                />\n                                            );\n                                        }}\n                                    />\n                                </MediaUploadCheck>\n                            )}\n                            <IconButton\n                                className=\"components-icon-button components-toolbar__control\"\n                                label={__(\"Remove Image\", \"carkeek-blocks\")}\n                                onClick={this.removeImage}\n                                icon=\"trash\"\n                            />\n                        </Toolbar>\n                    )}\n                </BlockControls>\n                <div className={className}>\n                    { (layout==\"grid\" || isSelected) &&\n                    <>\n                        {url ? (\n                            <>\n                                <img src={url} alt={alt} />\n                                {isBlobURL(url) && <Spinner />}\n                            </>\n                        ) : (\n                            <MediaPlaceholder\n                                icon=\"format-image\"\n                                onSelect={this.onSelectImage}\n\n                                onError={this.onUploadError}\n                                //accept=\"image/*\"\n                                allowedTypes={[\"image\"]}\n                                notices={noticeUI}\n                            />\n                        )}\n                        </>\n                    }\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__name\"}\n                        tagName=\"div\"\n                        onChange={this.onChangeName}\n                        value={name}\n                        placeholder={__(\"Member Name\", \"carkeek-blocks\")}\n                        formatingControls={[]}\n                    />\n\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__title\"}\n                        tagName=\"div\"\n                        onChange={this.onChangeTitle}\n                        value={title}\n                        placeholder={isSelected ? __(\"Member Title\", \"carkeek-blocks\") : null}\n                        formatingControls={[]}\n                    />\n\n                    {isSelected &&\n                    <>\n                    <RichText\n                        className={\"wp-block-carkeek-blocks-team-member__details\"}\n                        tagName=\"p\"\n                        onChange={this.onChangeDetails}\n                        value={details}\n                        placeholder={__(\"Member Details\", \"carkeek-blocks\")}\n                        formatingControls={[]}\n                    />\n                    <TextControl\n                        value={email}\n                        onChange={this.onChangeEmail}\n                        label={__(\"Email\", \"carkeek-blocks\")}\n                    />\n                    <TextControl\n                        value={emailLabel}\n                        onChange={this.onChangeEmailLabel}\n                        label={__(\"Email Label\", \"carkeek-blocks\")}\n                    />\n                    </>\n                    }\n                </div>\n            </>\n        );\n    }\n}\n\nexport default withSelect((select, props) => {\n    const id = props.attributes.id;\n    const parentId = select( 'core/block-editor' ).getBlockHierarchyRootClientId( props.clientId );\n    const parentAttributes = select('core/block-editor').getBlockAttributes( parentId );\n    return {\n        image: id ? select(\"core\").getMedia(id) : null,\n        imageSizes: select(\"core/editor\").getEditorSettings().imageSizes,\n        layout: parentAttributes.layout\n    };\n})(withNotices(TeamMemberEdit));\n","import \"./style.editor.scss\";\nimport \"./parent\";\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from \"./edit\";\nimport { RichText } from \"@wordpress/editor\";\n\n\nconst attributes = {\n    name: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__name\"\n    },\n    title: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__title\"\n    },\n    details: {\n        type: \"string\",\n        source: \"html\",\n        selector: \".wp-block-carkeek-blocks-team-member__details\"\n    },\n    id: {\n        type: \"number\"\n    },\n    alt: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"img\",\n        attribute: \"alt\",\n        default: \"\"\n    },\n    url: {\n        type: \"string\",\n        source: \"attribute\",\n        selector: \"img\",\n        attribute: \"src\"\n    },\n    email: {\n        type: \"string\",\n    },\n    emailLabel: {\n        type: \"string\",\n        default: \"Send an email\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/team-member\", {\n    title: __(\"Team Member\", \"carkeek-blocks\"),\n\n    description: __(\" Block showing a Team Member. \", \"carkeek-blocks\"),\n\n    icon: \"admin-users\",\n\n    parent: [\"carkeek-blocks/team-members\"],\n\n    supports: {\n        reusable: false,\n        html: false\n    },\n\n    category: \"widgets\",\n\n    keywords: [\n        __(\"team\", \"carkeek-blocks\"),\n        __(\"member\", \"carkeek-blocks\"),\n        __(\"person\", \"carkeek-blocks\"),\n        __(\"staff\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    deprecated: [{\n        attributes,\n        save: ({ attributes }) => {\n            const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n            return (\n                <div>\n                    <div className=\"wp-block-carkeek-blocks-team-member__initial\">\n                        {url && (\n                            <div className=\"wp-block-carkeek-blocks-team-member__image\">\n                                <img\n                                    src={url}\n                                    alt={alt}\n                                    className={id ? `wp-image-${id}` : null}\n                                />\n                            </div>\n                        )}\n                        {name && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__name\"}\n                                tagName=\"div\"\n                                value={name}\n                            />\n                        )}\n                        {title && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__title\"}\n                                tagName=\"p\"\n                                value={title}\n                            />\n                        )}\n                     </div>\n                     <div className=\"wp-block-carkeek-blocks-team-member__additional\">\n                        {details && (\n                            <RichText.Content\n                                className={\"wp-block-carkeek-blocks-team-member__details\"}\n                                tagName=\"p\"\n                                value={details}\n                            />\n                        )}\n                        {email &&(\n                            <a className=\"{button is-style-cta}\" href=\"mailto:{email}\">{emailLabel}</a>\n                        )}\n                    </div>\n                </div>\n            );\n        },\n    }],\n\n    save: ({ attributes }) => {\n        const { title, name, url, alt, id, details, email, emailLabel } = attributes;\n        return (\n            <div>\n                <div className=\"wp-block-carkeek-blocks-team-member__initial\">\n                    {url && (\n                        <div className=\"wp-block-carkeek-blocks-team-member__image\">\n                            <img\n                                src={url}\n                                alt={alt}\n                                className={id ? `skip-lazy wp-image-${id}` : 'skip-lazy'}\n                            />\n                        </div>\n                    )}\n\n                    <RichText.Content\n                        className={\"wp-block-carkeek-blocks-team-member__name\"}\n                        tagName=\"div\"\n                        value={name}\n                    />\n\n                    {title && (\n                        <RichText.Content\n                            className={\"wp-block-carkeek-blocks-team-member__title\"}\n                            tagName=\"p\"\n                            value={title}\n                        />\n                    )}\n                 </div>\n                 <div className=\"wp-block-carkeek-blocks-team-member__additional\">\n                    {details && (\n                        <RichText.Content\n                            className={\"wp-block-carkeek-blocks-team-member__details\"}\n                            tagName=\"p\"\n                            value={details}\n                        />\n                    )}\n                    {email &&(\n                        <a className={\"button is-style-cta\"} href={`mailto:${email}`}>{emailLabel}</a>\n                    )}\n                </div>\n            </div>\n        );\n    },\n\n    edit\n});\n","import { Path, SVG } from '@wordpress/components';\nimport { registerBlockType, createBlock } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, InspectorControls } from \"@wordpress/editor\";\nimport { PanelBody, RangeControl, RadioControl } from \"@wordpress/components\";\n\nconst attributes = {\n    columns: {\n        type: \"number\",\n        default: 3\n    },\n    layout: {\n        type: \"string\",\n        default: \"grid\"\n    }\n};\n\nregisterBlockType(\"carkeek-blocks/team-members\", {\n    title: __(\"Team Members\", \"carkeek-blocks\"),\n\n    description: __(\"Block showing a Team Members.\", \"carkeek-blocks\"),\n\n    icon: (\n        <SVG xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"black\"\n            width=\"48px\"\n            height=\"48px\">\n                <Path\n                d=\"M0 0h24v24H0V0z\"\n                fill=\"none\"/>\n                <Path\n                d=\"M12 12c1.65 0 3-1.35 3-3s-1.35-3-3-3-3 1.35-3 3 1.35 3 3 3zm0-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm6 8.58c0-2.5-3.97-3.58-6-3.58s-6 1.08-6 3.58V18h12v-1.42zM8.48 16c.74-.51 2.23-1 3.52-1s2.78.49 3.52 1H8.48zM19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z\"\n                />\n        </SVG>\n    ),\n\n    category: \"widgets\",\n\n    supports: {\n        html: false,\n        align: [\"wide\", \"full\"]\n    },\n\n    transforms: {\n        from: [\n            {\n                type: \"block\",\n                blocks: [\"core/gallery\"],\n                transform: ({ columns, images }) => {\n                    let inner = images.map(({ alt, id, url }) =>\n                        createBlock(\"carkeek-blocks/team-member\", {\n                            alt,\n                            id,\n                            url\n                        })\n                    );\n                    return createBlock(\n                        \"carkeek-blocks/team-members\",\n                        {\n                            columns: columns\n                        },\n                        inner\n                    );\n                }\n            },\n            {\n                type: \"block\",\n                blocks: [\"core/image\"],\n                isMultiBlock: true,\n                transform: attributes => {\n                    let inner = attributes.map(({ alt, id, url }) =>\n                        createBlock(\"carkeek-blocks/team-member\", {\n                            alt,\n                            id,\n                            url\n                        })\n                    );\n                    return createBlock(\n                        \"carkeek-blocks/team-members\",\n                        {\n                            columns: 3\n                        },\n                        inner\n                    );\n                }\n            }\n        ]\n    },\n\n    keywords: [\n        __(\"team\", \"carkeek-blocks\"),\n        __(\"member\", \"carkeek-blocks\"),\n        __(\"person\", \"carkeek-blocks\")\n    ],\n\n    attributes,\n\n    edit({ className, attributes, setAttributes }) {\n        const { columns, layout } = attributes;\n        return (\n            <div className={`${className} has-${columns}-columns is-${layout}-style`}>\n                <InspectorControls>\n                    <PanelBody>\n                        <RangeControl\n                            label={__(\"Columns\", \"carkeek-blocks\")}\n                            help={__(\"With list style layout, this determines the width of the column.\", \"carkeek-blocks\")}\n                            value={columns}\n                            onChange={columns => setAttributes({ columns })}\n                            min={1}\n                            max={6}\n                        />\n                        <RadioControl\n                        label=\"Layout\"\n                        selected={layout}\n                        options={[\n                                {label: \"Grid\", value:'grid'},\n                                {label: \"List\", value:'list'},\n                            ]}\n                        onChange={layout => setAttributes({ layout })}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks\n                    allowedBlocks={[\"carkeek-blocks/team-member\"]}\n                />\n            </div>\n        );\n    },\n\n    save({ attributes }) {\n        const { columns, layout } = attributes;\n        return (\n            <div className={`has-${columns}-columns is-${layout}-style`} data-layout={layout}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    }\n});\n","// extracted by mini-css-extract-plugin","import \"./blocks/team-member\";\nimport \"./blocks/link-tile\";\nimport \"./blocks/custom-archive\";\nimport \"./blocks/link-gallery\";\nimport \"./blocks/slider\";\nimport \"./blocks/accordion\";\n\n","module.exports = wp[\"blob\"];","module.exports = wp[\"blockEditor\"];","module.exports = wp[\"blocks\"];","module.exports = wp[\"components\"];","module.exports = wp[\"compose\"];","module.exports = wp[\"data\"];","module.exports = wp[\"editor\"];","module.exports = wp[\"element\"];","module.exports = wp[\"i18n\"];","module.exports = lodash;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,UAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AAIA;AACA;AAGA;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAhCA;AACA;AAiCA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;ACnDA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;A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","sourceRoot":""}