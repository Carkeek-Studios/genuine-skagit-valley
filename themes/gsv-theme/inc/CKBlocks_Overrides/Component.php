<?php
/**
 * WP_Rig\WP_Rig\AMP\Component class
 *
 * @package gsv_theme
 */

namespace WP_Rig\WP_Rig\CKBlocks_Overrides;

use Tribe__Template;
use WP_Rig\WP_Rig\Component_Interface;
use WP_Rig\WP_Rig\Templating_Component_Interface;

/**
 * Class for template helpers
 *
 * Exposes template tags:
 * * `gsv_theme()->get_social_links()`
 *
 * @link https://wordpress.org/plugins/amp/
 */
class Component implements Component_Interface, Templating_Component_Interface {
	// phpcs:disable WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase
	/**
	 * Gets the unique identifier for the theme component.
	 *
	 * @return string Component slug.
	 */
	public function get_slug() : string {
		return 'overrides';
	}

	/**
	 * Need this function even though its empty
	 */
	public function initialize() {
		add_action( 'admin_menu', array( $this, 'remove_menu_items' ) );
		add_filter( 'carkeek_block_custom_post_layout_tribe_organizer__query_args', array( $this, 'set_organizers_sort' ), 10, 1 );
		add_filter( 'ck_custom_archive_ck_members__featured_image', array( $this, 'ck_members_featured_image' ), 10, 3 );
		add_filter( 'ck_custom_archive_ck_members__link', array( $this, 'ck_members_farmstand_fresh_link' ), 10, 3 );
		add_filter( 'ck_custom_archive_ck_members__link_target', array( $this, 'ck_members_farmstand_fresh_link_target' ), 10, 2 );
		add_filter( 'ck_custom_archive_ck_members__excerpt', array( $this, 'ck_members_farmstand_fresh_excerpt' ), 10, 3 );
		add_filter( 'ck_custom_archive_layout__meta_before_title', array( $this, 'ck_members_farmstand_fresh_before_title' ), 10, 2 );
		add_filter( 'ck_custom_archive_layout__meta_after_title', array( $this, 'ck_members_after_title' ), 10, 2 );
		add_action( 'ck_custom_archive_layout__after_excerpt', array( $this, 'ck_members_farmstand_after_excerpt' ), 10, 1 );
	}

	/**
	 * Gets template tags to expose as methods on the Template_Tags class instance, accessible through `gsv_theme()`.
	 *
	 * @return array Associative array of $method_name => $callback_info pairs. Each $callback_info must either be
	 *               a callable or an array with key 'callable'. This approach is used to reserve the possibility of
	 *               adding support for further arguments in the future.
	 */
	public function template_tags() : array {
		return array();
	}



	/**Hide Custom Links from Menu */
	public function remove_menu_items() {

			remove_menu_page( 'edit.php?post_type=custom_link' );

	}

	/** Sort Organizers by Last Name
	 *
	 * @param array $args query args generated by selections.
	 */
	public function set_organizers_sort( $args ) {

		$args['orderby']  = 'meta_value';
		$args['meta_key'] = 'organizers_last_name';
		$args['order']    = 'ASC';

		return $args;

	}

	/** Set Default Image
	 *
	 * @param string $featured_image image from post.
	 * @param string $post_id post id.
	 * @param object $data data object from block.
	 */
	public function ck_members_featured_image( $featured_image, $post_id, $data ) {
		if ( $data->displayFeaturedImage && empty( $featured_image ) ) {
			$default = get_field( 'member_directory_default_image', 'options' );
			if ( ! empty( $default ) ) {
				$featured_image = wp_get_attachment_image( $default, 'large' );
			}
		}
		return $featured_image;
	}

	/** Set permalink to the website for the farmstand fresh page
	 *
	 * @param string $permalink post permalink.
	 * @param string $post_id post id.
	 * @param object $data data object from block.
	 */
	public function ck_members_farmstand_fresh_link( $permalink, $post_id, $data ) {
		if ( self::string_contains( $data->className, 'farmstand-fresh-list' ) || self::string_contains( $data->className, 'farmstand-fresh-chefs' ) ) {
			$permalink = get_field( 'member_website', $post_id );
		}
		return $permalink;
	}

	/** Set permalink target to the website for the farmstand fresh page
	 *
	 * @param string $permalink post permalink.
	 * @param object $data data object from block.
	 */
	public function ck_members_farmstand_fresh_link_target( $target, $data ) {
		if ( self::string_contains( $data->className, 'farmstand-fresh-list' ) || self::string_contains( $data->className, 'farmstand-fresh-chefs' ) ) {
			$target = '_blank';
		}
		return $target;
	}

	/** Make directions link from the address on the post.
	 *
	 * @param string $post_id post id.
	 */
	public static function make_directions_link( $post_id ) {
		$address         = get_field( 'member_address', $post_id );
		$directions_link = '';
		if ( isset( $address['address'] ) && ! empty( $address['address'] ) ) {
			$directions_link = wp_sprintf( '<a href="https://maps.google.com/?daddr=%1s" target="_blank" class="directions-link">Directions</a>', $address['address'] );
		}
		return $directions_link;
	}

	/** Check if string contains (can be replaced with php function in php 8).
	 *
	 * @param string $string string to check.
	 * @param string $word the word we are looking for.
	 */
	public static function string_contains( $string, $word ) {
		if ( strpos( $string, $word ) !== false ) {
			return true;
		} else {
			return false;
		}
	}

	/** Add data from post to excerpt of FS Fresh list
	 *
	 * @param object $data data object from block.
	 */
	public function ck_members_farmstand_after_excerpt( $data ) {
		global $post;
		if ( self::string_contains( $data->className, 'farmstand-fresh-list' ) ) {
			$directions = self::make_directions_link( $post->ID );
			$hours      = get_field( 'hours', $post->ID );
			echo '<p class="farmstand-hours-map">';
			if ( ! empty( $hours ) ) {
				echo '<span class="farmstand-hours">' . esc_html( $hours ) . '</span>';
			}
			echo wp_kses_post( $directions ) . '</p>';
		}
	}

	/** Replace the excerpt on FS fresh chefs list
	 *
	 * @param string $excerpt the excerpt from the post.
	 * @param string $post_id post id.
	 * @param object $data data object from block.
	 */
	public function ck_members_farmstand_fresh_excerpt( $excerpt, $post_id, $data ) {
		if ( self::string_contains( $data->className, 'farmstand-fresh-list' ) || self::string_contains( $data->className, 'farmstand-fresh-chefs' ) ) {
			$alt = get_field( 'farmstand_fresh_description', $post_id );
			if ( ! empty( $alt ) ) {
				$excerpt = $alt;
			}
		}
		return $excerpt;
	}

	/** Add chefs name from post before title
	 *
	 * @param string $before before meta assigned from the block.
	 * @param object $data data object from block.
	 */
	public function ck_members_farmstand_fresh_before_title( $before, $data ) {
		if ( self::string_contains( $data->className, 'farmstand-fresh-chefs' ) ) {
			$chef = get_field( 'farmstand_fresh_chef' );
		}
		if ( ! empty( $chef ) ) {
			$before = '<div class="farmstand-fresh-chef">' . $chef . '</div>';
		}
		return $before;
	}


	/** Add chefs name from post before title
	 *
	 * @param string $before before meta assigned from the block.
	 * @param object $data data object from block.
	 */
	public function ck_members_after_title( $after, $data ) {
		if ( self::string_contains( $data->className, 'featured-member' ) ) {
			$address = get_field( 'subtitle' );
		}
		if ( ! empty( $address ) ) {
			$after = '<div class="featured-member-location">' . $address . '</div>';
		}
		return $after;
	}
	// phpcs:enable
}


